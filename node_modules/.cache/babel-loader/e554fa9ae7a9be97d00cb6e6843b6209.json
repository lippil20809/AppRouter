{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/AppRouter/src/containers/TodoDetail/TodoDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport * as Statuses from '../../store/statuses'; //import { getUser } from '../../api/users';\n\nimport { getUser, getSliceUsers } from '../../store/users';\nimport { getSlice, getTodo } from '../../store/todos'; //import { getTodo } from '../../api/todos';\n//import useRequest from '../../hooks/useRequest';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n_c = TodoDetailWrapper;\n\nconst TodoDetail = () => {\n  _s();\n\n  const params = useParams();\n  const dispatch = useDispatch();\n  const {\n    completed,\n    setCompleted\n  } = useState(false);\n  const {\n    todo,\n    todoRequestStatus\n  } = useSelector(getSlice);\n  const {\n    user\n  } = useSelector(getSliceUsers);\n  useEffect(() => {\n    if (params.id) {\n      dispatch(getTodo(params.id));\n    }\n\n    if (!(todo === null || todo === void 0 ? void 0 : todo.userId)) return Promise.resolve();\n    {\n      dispatch(getUser(!(todo === null || todo === void 0 ? void 0 : todo.userId)));\n    }\n  }, [dispatch, params.id, todo === null || todo === void 0 ? void 0 : todo.userId]);\n  return /*#__PURE__*/_jsxDEV(TodoDetailWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/todos\",\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), todoRequestStatus === Statuses.PENDING && 'loading...', todoRequestStatus === Statuses.FAILURE && 'some error...', todo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: () => setCompleted(!completed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/users/${todo === null || todo === void 0 ? void 0 : todo.userId}`,\n      children: user === null || user === void 0 ? void 0 : user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}; // const TodoDetail = () => {\n//   const params = useParams();\n//   const requestTodo = useCallback(() => getTodo(params.id), [params.id]);\n//   const { data: todo, loading, error } = useRequest(requestTodo);\n//   const { completed, setCompleted } = useState(false);\n//   const requestAlbumId = useCallback(() => {\n//     if (!todo?.userId) return Promise.resolve();\n//     return getUser(todo?.userId);\n//   }, [todo?.userId]);\n//   const { data: user } = useRequest(requestAlbumId);\n//   return (\n//     <TodoDetailWrapper>\n//       <Link to=\"/todos\">Todos</Link>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {todo && (\n//         <>\n//           <h1>{todo.title}</h1>\n//           <input type=\"checkbox\" checked={todo.completed} onChange={() => setCompleted(!completed)} />\n//         </>\n//       )}\n//       <Link to={`/users/${todo?.userId}`}>{user?.name}</Link>\n//     </TodoDetailWrapper>\n//   );\n// };\n\n\n_s(TodoDetail, \"8kBM5A9va9M6FbfjykDZ77w3YkM=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c2 = TodoDetail;\nexport default TodoDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoDetailWrapper\");\n$RefreshReg$(_c2, \"TodoDetail\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/containers/TodoDetail/TodoDetail.js"],"names":["React","useState","useEffect","styled","useDispatch","useSelector","Link","useParams","Statuses","getUser","getSliceUsers","getSlice","getTodo","TodoDetailWrapper","TodoDetail","params","dispatch","completed","setCompleted","todo","todoRequestStatus","user","id","userId","Promise","resolve","PENDING","FAILURE","title","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B,C,CACA;;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,mBAAvC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,mBAAlC,C,CACA;AACA;;;;AAEA,MAAMC,iBAAiB,GAAGV,MAAM,CAAC,SAAD,CAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMU,iB;;AAWN,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BjB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEkB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA8Bf,WAAW,CAACM,QAAD,CAA/C;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAWhB,WAAW,CAACK,aAAD,CAA5B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAM,CAACO,EAAX,EAAe;AACbN,MAAAA,QAAQ,CAACJ,OAAO,CAACG,MAAM,CAACO,EAAR,CAAR,CAAR;AACD;;AACD,QAAI,EAACH,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,MAAP,CAAJ,EAAmB,OAAOC,OAAO,CAACC,OAAR,EAAP;AACnB;AACET,MAAAA,QAAQ,CAACP,OAAO,CAAC,EAACU,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,MAAP,CAAD,CAAR,CAAR;AACD;AACF,GARQ,EAQN,CAACP,QAAD,EAAWD,MAAM,CAACO,EAAlB,EAAqBH,IAArB,aAAqBA,IAArB,uBAAqBA,IAAI,CAAEI,MAA3B,CARM,CAAT;AAUA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,iBAAiB,KAAKZ,QAAQ,CAACkB,OAA/B,IAA0C,YAF7C,EAGGN,iBAAiB,KAAKZ,QAAQ,CAACmB,OAA/B,IAA0C,eAH7C,EAIGR,IAAI,iBACH;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAET,IAAI,CAACF,SAArC;AAAgD,QAAA,QAAQ,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBALJ,eAUE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASE,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEI,MAAO,EAAjC;AAAA,gBAAqCF,IAArC,aAAqCA,IAArC,uBAAqCA,IAAI,CAAEQ;AAA3C;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/BD,C,CAiCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA3DMf,U;UACWP,S,EACEH,W,EAEmBC,W,EACnBA,W;;;MALbS,U;AA6DN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport * as Statuses from '../../store/statuses';\n//import { getUser } from '../../api/users';\nimport { getUser, getSliceUsers } from '../../store/users';\nimport { getSlice, getTodo } from '../../store/todos';\n//import { getTodo } from '../../api/todos';\n//import useRequest from '../../hooks/useRequest';\n\nconst TodoDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n\nconst TodoDetail = () => {\n  const params = useParams();\n  const dispatch = useDispatch();\n  const { completed, setCompleted } = useState(false);\n  const { todo, todoRequestStatus } = useSelector(getSlice);\n  const { user } = useSelector(getSliceUsers);\n\n  useEffect(() => {\n    if (params.id) {\n      dispatch(getTodo(params.id));\n    }\n    if (!todo?.userId) return Promise.resolve();\n    {\n      dispatch(getUser(!todo?.userId));\n    }\n  }, [dispatch, params.id,todo?.userId]);\n\n  return (\n    <TodoDetailWrapper>\n      <Link to=\"/todos\">Todos</Link>\n      {todoRequestStatus === Statuses.PENDING && 'loading...'}\n      {todoRequestStatus === Statuses.FAILURE && 'some error...'}\n      {todo && (\n        <>\n          <h1>{todo.title}</h1>\n          <input type=\"checkbox\" checked={todo.completed} onChange={() => setCompleted(!completed)} />\n        </>\n      )}\n      <Link to={`/users/${todo?.userId}`}>{user?.name}</Link>\n    </TodoDetailWrapper>\n  );\n};\n\n// const TodoDetail = () => {\n//   const params = useParams();\n//   const requestTodo = useCallback(() => getTodo(params.id), [params.id]);\n//   const { data: todo, loading, error } = useRequest(requestTodo);\n//   const { completed, setCompleted } = useState(false);\n\n//   const requestAlbumId = useCallback(() => {\n//     if (!todo?.userId) return Promise.resolve();\n//     return getUser(todo?.userId);\n//   }, [todo?.userId]);\n//   const { data: user } = useRequest(requestAlbumId);\n\n//   return (\n//     <TodoDetailWrapper>\n//       <Link to=\"/todos\">Todos</Link>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {todo && (\n//         <>\n//           <h1>{todo.title}</h1>\n//           <input type=\"checkbox\" checked={todo.completed} onChange={() => setCompleted(!completed)} />\n//         </>\n//       )}\n//       <Link to={`/users/${todo?.userId}`}>{user?.name}</Link>\n//     </TodoDetailWrapper>\n//   );\n// };\n\nexport default TodoDetail;\n"]},"metadata":{},"sourceType":"module"}