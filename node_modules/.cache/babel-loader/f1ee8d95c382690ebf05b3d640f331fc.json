{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/AppRouter/src/containers/Albums/Albums.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from 'styled-components';\nimport * as Statuses from \"../../store/statuses\";\nimport { getSliceAlbums, getAlbums } from '../../store/albums'; //import { getAlbums } from '../../api/albums';\n\nimport Album from '../../components/Album'; //import useRequest from '../../hooks/useRequest';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumsWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n_c = AlbumsWrapper;\n\nconst Albums = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    albums,\n    albumsRequestStatus\n  } = useSelector(getSliceAlbums);\n  useEffect(() => {\n    dispatch(getAlbums());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(AlbumsWrapper, {\n    children: [albumsRequestStatus === Statuses.PENDING && \"loading...\", albumsRequestStatus === Statuses.FAILURE && \"some error...\", albums.map(album => /*#__PURE__*/_jsxDEV(Album, { ...album\n    }, album.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // const Albums = () => {\n//   const { data: albums, loading, error } = useRequest(getAlbums);\n//   return (\n//     <AlbumsWrapper>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {!loading && !error && albums && albums.map(album => <Album key={album.id} {...album} />)}\n//     </AlbumsWrapper>\n//   );\n// };\n\n\n_s(Albums, \"6GENm7C3VifK/vFuLviuIBoMMRg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = Albums;\nexport default Albums;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AlbumsWrapper\");\n$RefreshReg$(_c2, \"Albums\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/containers/Albums/Albums.js"],"names":["React","useEffect","useDispatch","useSelector","styled","Statuses","getSliceAlbums","getAlbums","Album","AlbumsWrapper","Albums","dispatch","albums","albumsRequestStatus","PENDING","FAILURE","map","album","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAAQC,cAAR,EAAuBC,SAAvB,QAAuC,oBAAvC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,wBAAlB,C,CACA;;;AAEA,MAAMC,aAAa,GAAGL,MAAM,CAAC,SAAD,CAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMK,a;;AAWN,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkCV,WAAW,CAACG,cAAD,CAAnD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,aAAD;AAAA,eACIE,mBAAmB,KAAKR,QAAQ,CAACS,OAAjC,IAA4C,YADhD,EAEGD,mBAAmB,KAAKR,QAAQ,CAACU,OAAjC,IAA4C,eAF/C,EAGGH,MAAM,CAACI,GAAP,CAAWC,KAAK,iBAAI,QAAC,KAAD,OAA0BA;AAA1B,OAAYA,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,YAApB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfD,C,CAiBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA3BMR,M;UACaR,W,EACuBC,W;;;MAFpCO,M;AA6BN,eAAeA,MAAf","sourcesContent":["import React , {useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from 'styled-components';\nimport * as Statuses from \"../../store/statuses\";\nimport {getSliceAlbums,getAlbums} from '../../store/albums'\n//import { getAlbums } from '../../api/albums';\nimport Album from '../../components/Album';\n//import useRequest from '../../hooks/useRequest';\n\nconst AlbumsWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n\nconst Albums = () => {\n  const dispatch = useDispatch();\n  const { albums, albumsRequestStatus } = useSelector(getSliceAlbums);\n\n  useEffect(() => {\n    dispatch(getAlbums());\n  }, [dispatch]);\n\n  return (\n    <AlbumsWrapper>\n       {albumsRequestStatus === Statuses.PENDING && \"loading...\"}\n      {albumsRequestStatus === Statuses.FAILURE && \"some error...\"}\n      {albums.map(album => <Album key={album.id} {...album} />)}\n    </AlbumsWrapper>\n  );\n};\n\n// const Albums = () => {\n//   const { data: albums, loading, error } = useRequest(getAlbums);\n\n//   return (\n//     <AlbumsWrapper>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {!loading && !error && albums && albums.map(album => <Album key={album.id} {...album} />)}\n//     </AlbumsWrapper>\n//   );\n// };\n\nexport default Albums;\n"]},"metadata":{},"sourceType":"module"}