{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/AppRouter/src/containers/Posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Post from '../../components/Post';\nimport { getPosts, getSlice } from '../../store/posts';\nimport * as Statuses from '../../store/statuses'; //import { getPosts } from '../../api/posts';\n//import useRequest from '../../hooks/useRequest';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n\n  > a {\n    color: ${props => props.theme.color.main};\n  }\n`;\n_c = PostsWrapper;\n\nconst Posts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    posts,\n    postsRequestStatus\n  } = useSelector(getSlice);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(PostsWrapper, {\n    children: [postsRequestStatus === Statuses.PENDING && 'loading...', postsRequestStatus === Statuses.FAILURE && 'some error...', posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(Post, { ...post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; // const Posts = () => {\n//   const { data: posts, loading, error } = useRequest(getPosts);\n//   return (\n//     <PostsWrapper>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {!loading && !error && posts && posts.map(post => <Post key={post.id} {...post} />)}\n//     </PostsWrapper>\n//   );\n// };\n\n\n_s(Posts, \"6Jy/VgsH3MJSFnGS9qtrspjRDT8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = Posts;\nexport default Posts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostsWrapper\");\n$RefreshReg$(_c2, \"Posts\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/containers/Posts/Posts.js"],"names":["React","useEffect","useDispatch","useSelector","styled","Post","getPosts","getSlice","Statuses","PostsWrapper","props","theme","color","main","Posts","dispatch","posts","postsRequestStatus","PENDING","FAILURE","map","post","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B,C,CAEA;AACA;;;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAAC,SAAD,CAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcM,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,IAAK;AAC/C;AACA,CAbA;KAAMJ,Y;;AAeN,MAAMK,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAEc,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAgCd,WAAW,CAACI,QAAD,CAAjD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACT,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,CAACS,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,YAAD;AAAA,eACGE,kBAAkB,KAAKT,QAAQ,CAACU,OAAhC,IAA2C,YAD9C,EAEGD,kBAAkB,KAAKT,QAAQ,CAACW,OAAhC,IAA2C,eAF9C,EAGGH,KAHH,aAGGA,KAHH,uBAGGA,KAAK,CAAEI,GAAP,CAAWC,IAAI,iBACd,QAAC,IAAD,OAAwBA;AAAxB,OAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjBD,C,CAmBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA7BMR,K;UACaZ,W,EACqBC,W;;;MAFlCW,K;AA+BN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport Post from '../../components/Post';\n\nimport { getPosts, getSlice } from '../../store/posts';\nimport * as Statuses from '../../store/statuses';\n\n//import { getPosts } from '../../api/posts';\n//import useRequest from '../../hooks/useRequest';\n\nconst PostsWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n\n  > a {\n    color: ${(props) => props.theme.color.main};\n  }\n`;\n\nconst Posts = () => {\n  const dispatch = useDispatch();\n  const { posts, postsRequestStatus } = useSelector(getSlice);\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  return (\n    <PostsWrapper>\n      {postsRequestStatus === Statuses.PENDING && 'loading...'}\n      {postsRequestStatus === Statuses.FAILURE && 'some error...'}\n      {posts?.map(post => (\n        <Post key={post.id} {...post} />\n      ))}\n    </PostsWrapper>\n  );\n};\n\n// const Posts = () => {\n//   const { data: posts, loading, error } = useRequest(getPosts);\n\n//   return (\n//     <PostsWrapper>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {!loading && !error && posts && posts.map(post => <Post key={post.id} {...post} />)}\n//     </PostsWrapper>\n//   );\n// };\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}