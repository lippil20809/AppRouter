{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/AppRouter/src/containers/TodoDetail/TodoDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from 'react-router-dom';\nimport * as Statuses from \"../../store/statuses\";\nimport { getUser } from '../../api/users';\nimport { getSlice, getTodo } from '../../store/todos'; //import { getTodo } from '../../api/todos';\n\nimport useRequest from '../../hooks/useRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n_c = TodoDetailWrapper;\n\nconst TodoDetail = () => {\n  _s();\n\n  const params = useParams();\n  const {\n    completed,\n    setCompleted\n  } = useState(false);\n  const dispatch = useDispatch();\n  const {\n    todo,\n    todoRequestStatus\n  } = useSelector(getSlice);\n  useEffect(() => {\n    if (params.id) {\n      dispatch(getTodo(params.id));\n    }\n  }, [dispatch]);\n  const requestAlbumId = useCallback(() => {\n    if (!(todo === null || todo === void 0 ? void 0 : todo.userId)) return Promise.resolve();\n    return getUser(todo === null || todo === void 0 ? void 0 : todo.userId);\n  }, [todo === null || todo === void 0 ? void 0 : todo.userId]);\n  const {\n    data: user\n  } = useRequest(requestAlbumId);\n  return /*#__PURE__*/_jsxDEV(TodoDetailWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/todos\",\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), todoRequestStatus === Statuses.PENDING && \"loading...\", todoRequestStatus === Statuses.FAILURE && \"some error...\", todo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: () => setCompleted(!completed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/users/${todo === null || todo === void 0 ? void 0 : todo.userId}`,\n      children: user === null || user === void 0 ? void 0 : user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}; // const TodoDetail = () => {\n//   const params = useParams();\n//   const requestTodo = useCallback(() => getTodo(params.id), [params.id]);\n//   const { data: todo, loading, error } = useRequest(requestTodo);\n//   const { completed, setCompleted } = useState(false);\n//   const requestAlbumId = useCallback(() => {\n//     if (!todo?.userId) return Promise.resolve();\n//     return getUser(todo?.userId);\n//   }, [todo?.userId]);\n//   const { data: user } = useRequest(requestAlbumId);\n//   return (\n//     <TodoDetailWrapper>\n//       <Link to=\"/todos\">Todos</Link>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {todo && (\n//         <>\n//           <h1>{todo.title}</h1>\n//           <input type=\"checkbox\" checked={todo.completed} onChange={() => setCompleted(!completed)} />\n//         </>\n//       )}\n//       <Link to={`/users/${todo?.userId}`}>{user?.name}</Link>\n//     </TodoDetailWrapper>\n//   );\n// };\n\n\n_s(TodoDetail, \"w1+pcAZzFjgkPDHZjDFTfxARhSc=\", false, function () {\n  return [useParams, useDispatch, useSelector, useRequest];\n});\n\n_c2 = TodoDetail;\nexport default TodoDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoDetailWrapper\");\n$RefreshReg$(_c2, \"TodoDetail\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/containers/TodoDetail/TodoDetail.js"],"names":["React","useState","useCallback","useEffect","styled","useDispatch","useSelector","Link","useParams","Statuses","getUser","getSlice","getTodo","useRequest","TodoDetailWrapper","TodoDetail","params","completed","setCompleted","dispatch","todo","todoRequestStatus","id","requestAlbumId","userId","Promise","resolve","data","user","PENDING","FAILURE","title","name"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from 'react-router-dom';\nimport * as Statuses from \"../../store/statuses\";\nimport { getUser } from '../../api/users';\nimport {getSlice,getTodo} from '../../store/todos'\n//import { getTodo } from '../../api/todos';\nimport useRequest from '../../hooks/useRequest';\n\nconst TodoDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n\nconst TodoDetail = () => {\n  const params = useParams();\n  const { completed, setCompleted } = useState(false);\n  const dispatch = useDispatch();\n  const { todo, todoRequestStatus} = useSelector(getSlice);\n \n  useEffect(() => {\n    if(params.id){\n      dispatch(getTodo(params.id))\n     \n    }\n  }, [dispatch]);\n\n  const requestAlbumId = useCallback(() => {\n    if (!todo?.userId) return Promise.resolve();\n    return getUser(todo?.userId);\n  }, [todo?.userId]);\n  const { data: user } = useRequest(requestAlbumId);\n\n  return (\n    <TodoDetailWrapper>\n      <Link to=\"/todos\">Todos</Link>\n      {todoRequestStatus === Statuses.PENDING && \"loading...\"}\n      {todoRequestStatus === Statuses.FAILURE && \"some error...\"}\n      {todo && (\n        <>\n          <h1>{todo.title}</h1>\n          <input type=\"checkbox\" checked={todo.completed} onChange={() => setCompleted(!completed)} />\n        </>\n      )}\n      <Link to={`/users/${todo?.userId}`}>{user?.name}</Link>\n    </TodoDetailWrapper>\n  );\n};\n\n// const TodoDetail = () => {\n//   const params = useParams();\n//   const requestTodo = useCallback(() => getTodo(params.id), [params.id]);\n//   const { data: todo, loading, error } = useRequest(requestTodo);\n//   const { completed, setCompleted } = useState(false);\n\n//   const requestAlbumId = useCallback(() => {\n//     if (!todo?.userId) return Promise.resolve();\n//     return getUser(todo?.userId);\n//   }, [todo?.userId]);\n//   const { data: user } = useRequest(requestAlbumId);\n\n//   return (\n//     <TodoDetailWrapper>\n//       <Link to=\"/todos\">Todos</Link>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {todo && (\n//         <>\n//           <h1>{todo.title}</h1>\n//           <input type=\"checkbox\" checked={todo.completed} onChange={() => setCompleted(!completed)} />\n//         </>\n//       )}\n//       <Link to={`/users/${todo?.userId}`}>{user?.name}</Link>\n//     </TodoDetailWrapper>\n//   );\n// };\n\nexport default TodoDetail;\n"]},"metadata":{},"sourceType":"module"}