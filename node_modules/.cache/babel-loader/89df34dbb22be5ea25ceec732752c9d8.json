{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/AppRouter/src/containers/AlbumDetail/AlbumDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport * as Statuses from '../../store/statuses';\nimport { Link, useParams } from 'react-router-dom';\nimport { getSliceAlbums, getAlbum } from '../../store/albums';\nimport { getSlicePhotos, getPhoto } from '../../store/photos'; //import { getAlbum } from '../../api/albums';\n//import { getPhoto } from '../../api/photos';\n//import useRequest from '../../hooks/useRequest';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlbumDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n_c = AlbumDetailWrapper;\n\nconst AlbumDetail = () => {\n  _s();\n\n  const params = useParams();\n  const dispatch = useDispatch();\n  const {\n    albums,\n    albumsRequestStatus\n  } = useSelector(getSliceAlbums);\n  const {\n    photo\n  } = useSelector(getSlicePhotos);\n  useEffect(() => {\n    if (params.id) {\n      dispatch(getAlbum(params.id));\n    }\n\n    if (!(albums === null || albums === void 0 ? void 0 : albums.userId)) return Promise.resolve();\n    {\n      dispatch(getPhoto(albums === null || albums === void 0 ? void 0 : albums.userId));\n    }\n  }, [dispatch, params.id, albums === null || albums === void 0 ? void 0 : albums.userId]);\n  return /*#__PURE__*/_jsxDEV(AlbumDetailWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/albums\",\n      children: \"Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), albumsRequestStatus === Statuses.PENDING && 'loading...', albumsRequestStatus === Statuses.FAILURE && 'some error...', albums && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: albums.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/photos/${albums === null || albums === void 0 ? void 0 : albums.userId}`,\n      children: photo === null || photo === void 0 ? void 0 : photo.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlbumDetail, \"bZny6BZKQnmdkXdVMn+EA3bilgk=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c2 = AlbumDetail;\nexport default AlbumDetail; // const AlbumDetail = () => {\n//   const params = useParams();\n//   const requestPost = useCallback(() => getAlbum(params.id), [params.id]);\n//   const { data: albums, loading, error } = useRequest(requestPost);\n//   const requestAlbumId = useCallback(() => {\n//     if (!albums?.userId) return Promise.resolve();\n//     return getPhoto(albums?.userId);\n//   }, [albums?.userId]);\n//   const { data: photo } = useRequest(requestAlbumId);\n//   return (\n//     <AlbumDetailWrapper>\n//       <Link to=\"/albums\">Albums</Link>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {albums && (\n//         <>\n//           <h1>{albums.title}</h1>\n//         </>\n//       )}\n//       <Link to={`/photos/${albums?.userId}`}>{photo?.url}</Link>\n//     </AlbumDetailWrapper>\n//   );\n// };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AlbumDetailWrapper\");\n$RefreshReg$(_c2, \"AlbumDetail\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/containers/AlbumDetail/AlbumDetail.js"],"names":["React","useCallback","useEffect","useDispatch","useSelector","styled","Statuses","Link","useParams","getSliceAlbums","getAlbum","getSlicePhotos","getPhoto","AlbumDetailWrapper","AlbumDetail","params","dispatch","albums","albumsRequestStatus","photo","id","userId","Promise","resolve","PENDING","FAILURE","title","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAAQC,cAAR,EAAuBC,QAAvB,QAAsC,oBAAtC;AACA,SAAQC,cAAR,EAAuBC,QAAvB,QAAsC,oBAAtC,C,CACA;AACA;AACA;;;;AAEA,MAAMC,kBAAkB,GAAGR,MAAM,CAAC,SAAD,CAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMQ,kB;;AAWN,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAEc,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkCd,WAAW,CAACK,cAAD,CAAnD;AACA,QAAM;AAACU,IAAAA;AAAD,MAAUf,WAAW,CAACO,cAAD,CAA3B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAM,CAACK,EAAX,EAAe;AACbJ,MAAAA,QAAQ,CAACN,QAAQ,CAACK,MAAM,CAACK,EAAR,CAAT,CAAR;AACD;;AACD,QAAG,EAACH,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,MAAT,CAAH,EAAoB,OAAOC,OAAO,CAACC,OAAR,EAAP;AACpB;AACEP,MAAAA,QAAQ,CAACJ,QAAQ,CAACK,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,MAAT,CAAT,CAAR;AACD;AACF,GARQ,EAQN,CAACL,QAAD,EAAWD,MAAM,CAACK,EAAlB,EAAqBH,MAArB,aAAqBA,MAArB,uBAAqBA,MAAM,CAAEI,MAA7B,CARM,CAAT;AAUA,sBACE,QAAC,kBAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,mBAAmB,KAAKZ,QAAQ,CAACkB,OAAjC,IAA4C,YAF/C,EAGGN,mBAAmB,KAAKZ,QAAQ,CAACmB,OAAjC,IAA4C,eAH/C,EAIGR,MAAM,iBACL;AAAA,6BACE;AAAA,kBAAKA,MAAM,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,qBALJ,eASE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUT,MAAX,aAAWA,MAAX,uBAAWA,MAAM,CAAEI,MAAO,EAApC;AAAA,gBAAwCF,KAAxC,aAAwCA,KAAxC,uBAAwCA,KAAK,CAAEQ;AAA/C;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7BD;;GAAMb,W;UACWN,S,EACEL,W,EACuBC,W,EACxBA,W;;;MAJZU,W;AA8BN,eAAeA,WAAf,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useCallback,useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport * as Statuses from '../../store/statuses';\nimport { Link, useParams } from 'react-router-dom';\nimport {getSliceAlbums,getAlbum} from '../../store/albums'\nimport {getSlicePhotos,getPhoto} from '../../store/photos'\n//import { getAlbum } from '../../api/albums';\n//import { getPhoto } from '../../api/photos';\n//import useRequest from '../../hooks/useRequest';\n\nconst AlbumDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n\nconst AlbumDetail = () => {\n  const params = useParams();\n  const dispatch = useDispatch();\n  const { albums, albumsRequestStatus } = useSelector(getSliceAlbums);\n  const {photo} = useSelector(getSlicePhotos)\n\n  useEffect(() => {\n    if (params.id) {\n      dispatch(getAlbum(params.id));\n    }\n    if(!albums?.userId) return Promise.resolve();\n    {\n      dispatch(getPhoto(albums?.userId));\n    }\n  }, [dispatch, params.id,albums?.userId]);\n\n  return (\n    <AlbumDetailWrapper>\n      <Link to=\"/albums\">Albums</Link>\n      {albumsRequestStatus === Statuses.PENDING && 'loading...'}\n      {albumsRequestStatus === Statuses.FAILURE && 'some error...'}\n      {albums && (\n        <>\n          <h1>{albums.title}</h1>\n        </>\n      )}\n      <Link to={`/photos/${albums?.userId}`}>{photo?.url}</Link>\n    </AlbumDetailWrapper>\n  );\n};\nexport default AlbumDetail;\n// const AlbumDetail = () => {\n//   const params = useParams();\n//   const requestPost = useCallback(() => getAlbum(params.id), [params.id]);\n//   const { data: albums, loading, error } = useRequest(requestPost);\n\n//   const requestAlbumId = useCallback(() => {\n//     if (!albums?.userId) return Promise.resolve();\n//     return getPhoto(albums?.userId);\n//   }, [albums?.userId]);\n//   const { data: photo } = useRequest(requestAlbumId);\n\n//   return (\n//     <AlbumDetailWrapper>\n//       <Link to=\"/albums\">Albums</Link>\n//       {loading && 'loading...'}\n//       {error && 'some error...'}\n//       {albums && (\n//         <>\n//           <h1>{albums.title}</h1>\n//         </>\n//       )}\n//       <Link to={`/photos/${albums?.userId}`}>{photo?.url}</Link>\n//     </AlbumDetailWrapper>\n//   );\n// };\n\n\n"]},"metadata":{},"sourceType":"module"}