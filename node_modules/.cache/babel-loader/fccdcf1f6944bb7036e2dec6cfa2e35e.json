{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { postsReducer } from './posts';\nimport { todosReducer } from './todos';\nimport { usersReducer } from './users';\nimport { albumsReducer } from './albums';\nimport { photosReducer } from './photos';\n\nconst logger = store => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst reducers = combineReducers({\n  posts: postsReducer,\n  todos: todosReducer,\n  users: usersReducer,\n  albums: albumsReducer,\n  photos: photosReducer\n});\nconst store = createStore(reducers, applyMiddleware(logger, thunk));\nexport default store;","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","postsReducer","todosReducer","usersReducer","albumsReducer","photosReducer","logger","store","next","action","console","log","reducers","posts","todos","users","albums","photos"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,aAAT,QAA8B,UAA9B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CAHD;;AAKA,MAAMG,QAAQ,GAAGd,eAAe,CAAC;AAC/Be,EAAAA,KAAK,EAAEZ,YADwB;AAE/Ba,EAAAA,KAAK,EAAEZ,YAFwB;AAG/Ba,EAAAA,KAAK,EAAEZ,YAHwB;AAI/Ba,EAAAA,MAAM,EAAEZ,aAJuB;AAK/Ba,EAAAA,MAAM,EAAEZ;AALuB,CAAD,CAAhC;AAOA,MAAME,KAAK,GAAGV,WAAW,CAACe,QAAD,EAAWb,eAAe,CAACO,MAAD,EAASN,KAAT,CAA1B,CAAzB;AAEA,eAAeO,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { postsReducer } from './posts';\nimport { todosReducer } from './todos';\nimport { usersReducer } from './users';\nimport { albumsReducer } from './albums';\nimport { photosReducer } from './photos';\n\nconst logger = store => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst reducers = combineReducers({\n  posts: postsReducer,\n  todos: todosReducer,\n  users: usersReducer,\n  albums: albumsReducer,\n  photos: photosReducer,\n});\nconst store = createStore(reducers, applyMiddleware(logger, thunk));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}