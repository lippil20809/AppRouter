{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/AppRouter/src/containers/Photos/Photos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from 'styled-components';\nimport * as Statuses from \"../../store/statuses\";\nimport { getSlice, getPhotos } from '../../store/photos'; //import { getPhotos } from '../../api/photos';\n\nimport Photo from '../../components/Photo/Photo'; //import useRequest from '../../hooks/useRequest';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotosWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n_c = PhotosWrapper;\n\nconst Photos = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    photos,\n    photosRequestStatus\n  } = useSelector(getSlice);\n  useEffect(() => {\n    dispatch(getPhotos());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(PhotosWrapper, {\n    children: [photosRequestStatus === Statuses.PENDING && \"loading...\", photosRequestStatus === Statuses.FAILURE && \"some error...\", photos.map(photo => /*#__PURE__*/_jsxDEV(Photo, { ...photo\n    }, photo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Photos, \"9zuLr2IQwsq+lbPLcsAbxGdWybk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = Photos;\nexport default Photos;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PhotosWrapper\");\n$RefreshReg$(_c2, \"Photos\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/containers/Photos/Photos.js"],"names":["React","useEffect","useDispatch","useSelector","styled","Statuses","getSlice","getPhotos","Photo","PhotosWrapper","Photos","dispatch","photos","photosRequestStatus","PENDING","FAILURE","map","photo","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,oBAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,8BAAlB,C,CACA;;;AAEA,MAAMC,aAAa,GAAGL,MAAM,CAAC,SAAD,CAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMK,a;;AAWN,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkCV,WAAW,CAACG,QAAD,CAAnD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,aAAD;AAAA,eACGE,mBAAmB,KAAKR,QAAQ,CAACS,OAAjC,IAA4C,YAD/C,EAEGD,mBAAmB,KAAKR,QAAQ,CAACU,OAAjC,IAA4C,eAF/C,EAGGH,MAAM,CAACI,GAAP,CAAWC,KAAK,iBAAI,QAAC,KAAD,OAA0BA;AAA1B,OAAYA,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,YAApB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfD;;GAAMR,M;UACaR,W,EACuBC,W;;;MAFpCO,M;AAiBN,eAAeA,MAAf","sourcesContent":["import React , {useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from 'styled-components';\nimport * as Statuses from \"../../store/statuses\";\nimport {getSlice,getPhotos} from '../../store/photos'\n//import { getPhotos } from '../../api/photos';\nimport Photo from '../../components/Photo/Photo';\n//import useRequest from '../../hooks/useRequest';\n\nconst PhotosWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n\nconst Photos = () => {\n  const dispatch = useDispatch();\n  const { photos, photosRequestStatus } = useSelector(getSlice);\n\n  useEffect(() => {\n    dispatch(getPhotos());\n  }, [dispatch]);\n\n  return (\n    <PhotosWrapper>\n      {photosRequestStatus === Statuses.PENDING && \"loading...\"}\n      {photosRequestStatus === Statuses.FAILURE && \"some error...\"}\n      {photos.map(photo => <Photo key={photo.id} {...photo} />)}\n    </PhotosWrapper>\n  );\n};\n\nexport default Photos;\n"]},"metadata":{},"sourceType":"module"}